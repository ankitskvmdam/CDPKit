master:

 - Fixed a bug in the 'shapescreen' tool that lead to the calculation of erroneous similarity scores
   in the 'score-only' screening mode
 - New class for the extraction of Bemis-Murcko scaffolds
 - New functions for conformer alignment
 - Function overload resolution order fixes in the CDPL.Math Python package
 - Fixed the throwing of exceptions when the env. variable LC_ALL has not been initialized
 - Python exports of Util::Map and Util::MultiMap do not provide the properties 'keys', 'values', and 'entries' anymore.
   They were replaced by the corresponding methods keys(), values() and items()
 - MolProp::getAtomCount() function has been extended by a 'strict' argument which, if set to 'false', instructs
   the accounting procedure to regard the meaning of generic atom types (e.g. any halogen)
 - New utility functions Chem::calcBasicProperties() enabling a more comfortable initialization of Chem::MolecularGraph
   and Chem::Reaction instances for further processing
 - CDPL Python bindings code cleanup
 - CDPL API cleanup
 - When deep copying Chem::Reaction or Chem::Molecule instances, values of properties referencing atoms and/or bonds (e.g. stereodescriptors, SSSR)
   now get automatically translated to values referencing the corresponding atoms/bonds of the copying target
 - GRAIL(X)DescriptorCalculator now only considers heavy atoms for the calculation of
   environment HBA/HBD occupation scores which do not represent a complementary feature type
 - New class GRAILDescriptorCalculator now calculates a shorter descriptor (35 elements) with
   not further subdivided H-bond donor/acceptor feature types
 - Old class GRAILDescriptorCalculator renamed into GRAILXDescriptorCalculator

v1.0.2:

 - Manylinux2014 wheel files now support Python3.11
 - Added support for building CDPL Python bindings wheel files on Windows
 - Build system cleanup
 
v1.0.1:

 - Added support for building manylinux2014 compliant CDPL Python bindings wheel files
 - Documentation updates

v1.0.0:

 - Initial release
